import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { BaseComponent } from '../../base.component';
import { Router } from '@angular/router';
import { VulnerabilityScannerService } from 'src/app/services/vulnerability-scanner/vulnerability.scanner.service';

@Component({
  selector: 'sql-injection-detection',
  templateUrl: './sql.injection.detection.component.html'
})
export class SqlInjectionDetectionComponent extends BaseComponent implements OnInit {

  scanForm!: FormGroup;
  loading = false;
  response: any;

  constructor(
    private formBuilder: FormBuilder, 
    private router: Router,
    private vulnerabilityScannerService: VulnerabilityScannerService) {
    super();
  }

  ngOnInit() {
    this.prepareForm();
  }

  prepareForm() {
    this.scanForm = this.formBuilder.group({
      url: ['', [Validators.required, Validators.pattern('https?://.+')]]
    });
    this.scanForm.controls['url'].valueChanges.subscribe(value => {
      this.response = null;
    });
  }

  onSubmit() {
    this.markFormGroupAsTouched(this.scanForm);
    if (this.scanForm.invalid) { return; }

    this.loading = true;
    const url = this.scanForm.value.url;
    this.scanForSqlInjection(url);
  }

  scanForSqlInjection(url: string) {
    if(!url) { return; }

    this.subscribers.scanToDetectSqlInjectionSub = this.vulnerabilityScannerService.scanToDetectSqlInjection(new Map().set('url', url))
    .subscribe({
      next: (res) => {
        this.response = res.message;
        this.loading = false;
      },
      error: (err) => {
        this.response = null;
        this.loading = false;
      }
    });
  }

  goBack() {
    this.router.navigate(['/dashboard']);
  }

}
